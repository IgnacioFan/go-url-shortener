// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UrlCache is an autogenerated mock type for the UrlCache type
type UrlCache struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *UrlCache) Get(key string) (string, error) {
	ret := _m.Called(key)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Set provides a mock function with given fields: key, val
func (_m *UrlCache) Set(key string, val string) error {
	ret := _m.Called(key, val)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(key, val)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUrlCache interface {
	mock.TestingT
	Cleanup(func())
}

// NewUrlCache creates a new instance of UrlCache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUrlCache(t mockConstructorTestingTNewUrlCache) *UrlCache {
	mock := &UrlCache{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
