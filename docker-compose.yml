version: "3.8"

services:
  db:
    image: postgres:alpine
    container_name: ${POSTGRES_HOST}
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -h ${POSTGRES_HOST} -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 2
    volumes:
      - go-url-shortener-db:/var/lib/postgresql/data
    networks:
      - go-url-shortener.network

  app:
    build:
      context: .
      dockerfile: build/Dockerfile
    restart: always
    ports:
      - 3000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - go-url-shortener.network
    deploy:
      replicas: 3
    command: "./app server"

  redis:
    image: redis
    container_name: ${REDIS_HOST}
    env_file:
      - .env
    ports:
      - ${EXPOSE_REDIS_PORT}:6379
    networks:
      - go-url-shortener.network

  nginx:
    image: nginx:latest
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - go-url-shortener.network

volumes:
  go-url-shortener-db:

networks:
  go-url-shortener.network:
